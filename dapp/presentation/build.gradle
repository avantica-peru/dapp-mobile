apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        multiDexEnabled true
    }

    dexOptions {
        incremental true
        maxProcessCount 4
        javaMaxHeapSize "2g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            manifestPlaceholders = [build_type_suffix: ""]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            applicationIdSuffix ".debug"
            manifestPlaceholders = [build_type_suffix: " debug"]
        }
    }

    productFlavors {
        prd {
            versionName globalConfiguration.getAt("androidPrdVersionName")
            manifestPlaceholders = [app_name: "DAPP", flavor_suffix: ""]
        }

//        dev {
//            versionName globalConfiguration.getAt("androidDevVersionName")
//            manifestPlaceholders = [app_name: "DAPP", flavor_suffix: " dev"]
//        }

        qa {
            applicationIdSuffix ".qa"
            versionName globalConfiguration.getAt("androidQAVersionName")
            manifestPlaceholders = [app_name: "DAPP", flavor_suffix: " qa"]
        }
    }

    dataBinding {
        enabled = true
    }
}

configurations {
    qaDebugCompile
    prdDebugCompile
    qaReleaseCompile
    prdReleaseCompile
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    compile project(':domain')

    qaDebugCompile project(path: ':data', configuration: 'qaDebug')
    prdDebugCompile project(path: ':data', configuration: 'prdDebug')
    qaReleaseCompile project(path: ':data', configuration: 'qaRelease')
    prdReleaseCompile project(path: ':data', configuration: 'prdRelease')

    apt presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    provided presentationDependencies.javaxAnnotation

    compile presentationDependencies.butterKnife
    compile presentationDependencies.annotationProcessor
    compile presentationDependencies.appCompat
    compile presentationDependencies.recyclerView
    compile presentationDependencies.cardView
    compile presentationDependencies.design
    compile presentationDependencies.constraintLayout
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.supportV4
    compile presentationDependencies.glide

    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.testingSupportLib

    //Development
    compile developmentDependencies.leakCanary
    compile 'com.android.support:support-v4:25.0.1'
}
